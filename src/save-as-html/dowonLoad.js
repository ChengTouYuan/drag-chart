
import echartStr from './deal-data/echarts.min.js?raw'
export default function downLoadHtml(data) {
    return "<!DOCTYPE html><html>  <head>    <meta charset=\"utf-8\" />    <title></title>    <style>      body {        margin: 0;        padding: 0;      }      #source-canvas {        width: 100%;        height: 100%;        position: relative;      }      .absolute {        position: absolute;      }    </style>    <script>"+echartStr+"</script>  </head>  <body>    <div id=\"source-canvas\"></div>  </body>  <script>    let allData="+data+";    function c(l, t, w, h, id) {      let div = document.createElement(\"div\");      div.setAttribute(\"class\", `absolute`);      div.setAttribute(        \"style\",        `left:${l}px;top:${t}px;width:${w}px;height:${h}px`      );      div.setAttribute(\"id\", id);      return div;    }    const config = {      pipe1: (data) => {        return {          title: {            text: data.setting.style.title,          },          tooltip: {            trigger: \"item\",          },          legend: {            top: \"5%\",            left: \"center\",          },          series: [            {              name: \"\",              type: \"pie\",              radius: [\"40%\", \"70%\"],              avoidLabelOverlap: false,              itemStyle: {                borderRadius: 10,                borderColor: \"#fff\",                borderWidth: 2,              },              label: {                show: false,                position: \"center\",              },              emphasis: {                label: {                  show: true,                  fontSize: \"40\",                  fontWeight: \"bold\",                },              },              labelLine: {                show: false,              },              data: data.setting.data.value,            },          ],        };      },      bar1: (data) => {        let x = [];        let y = [];        data.setting.data.value.forEach((item) => {          x.push(item.name);          y.push(item.value);        });        return {          title: {            text: data.setting.style.title,          },          tooltip: {            trigger: \"item\",          },          xAxis: {            type: \"category\",            data: x,          },          yAxis: {            type: \"value\",          },          series: [            {              data: y,              type: \"bar\",            },          ],        };      },    };    function setChart(element, config) {      let myChart = echarts.init(element);      myChart.setOption(config);      return myChart;    }    function innerChart() {      const sourceCanvas = document.getElementById(\"source-canvas\");      let element = null;      allData.forEach((item) => {        element = c(item.left, item.top, item.width, item.height, item.id);        sourceCanvas.appendChild(element);        setChart(element, config[item.name](item));      });    }    innerChart();  </script></html>";
}
